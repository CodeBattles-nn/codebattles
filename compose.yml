version: "3.9"
services:
  frontend-v2:
    build: FRONTEND_V2/.
    image: codebattles.cr.cloud.ru/frontend-v2:${RELEASE_TAG:-latest}
    ports:
      - "8002:80"
    restart: unless-stopped
    environment:
      VITE_ENV: "production"

    networks:
      - with-internet
      - no-internet

  backend:
    build: BACKEND_V2/.
    image: codebattles.cr.cloud.ru/backend-v2:${RELEASE_TAG:-latest}
    environment:
      SERVER_PORT: 8000
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/cb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      logging.config: "classpath:logback-spring-json.xml"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
    restart: unless-stopped
    networks:
      - with-internet
      - no-internet
      - checkers-net
  postgres:
    image: postgres:13.3-alpine
    environment:
      POSTGRES_DB: "cb"
      POSTGRES_USER: "postgres"
      PGUSER: "postgres"
      POSTGRES_PASSWORD: "admin"
      REQUIRE_CAPTCHA: false

    ports:
      - "25565:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "postgres", "-d", "cb" ]
      interval: 2s
      timeout: 2s
    restart: unless-stopped
    networks:
      - with-internet
      - no-internet

  gateway:
    build: GATEWAY/.
    image: codebattles.cr.cloud.ru/gateway:${RELEASE_TAG:-latest}
    ports:
      - "2500:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - with-internet
      - no-internet

  checker-java:
    build:
      dockerfile: z_checkers_dockerfiles/Java.Dockerfile
    image: codebattles.cr.cloud.ru/checker-java:${RELEASE_TAG:-latest}
    restart: unless-stopped
    networks:
      - checkers-net

  checker-python:
    build:
      dockerfile: z_checkers_dockerfiles/Python.Dockerfile
    image: codebattles.cr.cloud.ru/checker-python:${RELEASE_TAG:-latest}
    restart: unless-stopped
    networks:
      - checkers-net

#  checker-kumir:
#    build:
#      dockerfile: z_checkers_dockerfiles/Kumir.Dockerfile
#    image: codebattles.cr.cloud.ru/checker-kumir
#    restart: unless-stopped
#    networks:
#      - checkers-net
#
#
#  checker-cpp:
#    build:
#      dockerfile: z_checkers_dockerfiles/CPP.Dockerfile
#    image: codebattles.cr.cloud.ru/checker-cpp
#    restart: unless-stopped
#    networks:
#      - checkers-net
#  checker-pascal:
#    build:
#      dockerfile: z_checkers_dockerfiles/Pascal.Dockerfile
#    image: codebattles.cr.cloud.ru/checker-pascal
#    restart: unless-stopped
#    networks:
#      - checkers-net

networks:
  no-internet:
    driver: bridge
    internal: true
  checkers-net:
    driver: bridge
    internal: true
  with-internet:
    driver: bridge

