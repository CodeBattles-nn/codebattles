{
	"info": {
		"_postman_id": "867823eb-4831-40e5-9af1-f3f1ff1da5d1",
		"name": "Auto Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24756275",
		"_collection_link": "https://martian-astronaut-975194.postman.co/workspace/Codebattles~ac8c92c5-94b1-4349-a4b4-70c488f6046d/collection/24756275-867823eb-4831-40e5-9af1-f3f1ff1da5d1?action=share&source=collection_link&creator=24756275"
	},
	"item": [
		{
			"name": "0 Prepare enviorement",
			"item": [
				{
					"name": "0.1 Login to teacher panel",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\": \"admin\",\r\n    \"password\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:2500/api/teacher/auth",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "2500",
							"path": [
								"api",
								"teacher",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "0.2 Create champ",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"aboba\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/teacher/champs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"teacher",
								"champs"
							]
						}
					},
					"response": []
				},
				{
					"name": "0.3 Assign problem to champ",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"problem\": \"A\",\r\n    \"problem_id\": \"1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/teacher/champs/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"teacher",
								"champs",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "0.4 Create user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"users\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/teacher/champs/:id/add_users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"teacher",
								"champs",
								":id",
								"add_users"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "0.5 Save user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.environment.set(\"GEN_user_login\", jsonData[0].login);\r",
									"pm.environment.set(\"GEN_user_password\", jsonData[0].password);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/teacher/champs/:id/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"teacher",
								"champs",
								":id",
								"users"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "1. Login",
			"item": [
				{
					"name": "1.2 Invalid credential tests",
					"item": [
						{
							"name": "1.2.2 Login test (Invalid id)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"1000\",\r\n    \"login\": \"{{GEN_user_login}}\",\r\n    \"password\": \"{{GEN_user_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.3 Login test (Invalid login)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"1\",\r\n    \"login\": \"{{GEN_user_login}}{{GEN_user_login}}\",\r\n    \"password\": \"{{GEN_user_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.4 Login test (Invalid password)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"1\",\r\n    \"login\": \"{{GEN_user_login}}\",\r\n    \"password\": \"{{GEN_user_password}}{{GEN_user_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Success field equals false test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(false);\r",
									"});\r",
									""
								]
							}
						}
					]
				},
				{
					"name": "1.2.1 Login test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Success field test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"console.log(pm.request)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"1\",\r\n    \"login\": \"{{GEN_user_login}}\",\r\n    \"password\": \"{{GEN_user_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.test(\"Content-Type is present\", function () {\r",
					"    pm.response.to.have.header(\"Content-Type\");\r",
					"});\r",
					"\r",
					"pm.test(\"Response time is less than 500ms\", function () {\r",
					"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
					"});"
				]
			}
		}
	]
}